; ModuleID = 'asm_module'

@msg = private constant [15 x i8] c"Hello, world!\0a\00"

declare i32 @putchar(i32)
declare void @exit(i32) noreturn nounwind

define i32 @main() {
Entry:
      %X = alloca i8
      %Y = alloca i8
      %A = alloca i8
      %S_neg = alloca i1
      %S_zero = alloca i1
      br label %Reset_Routine

Reset_Routine:
      ; LDX #$00       ; starting index in X register
      store i8 0, i8* %X
      ; set neg
      store i1 0, i1* %S_neg
      ; set zero
      store i1 1, i1* %S_zero

      br label %Label_loop

Label_loop:
      ; LDA msg, X     ; read 1 char
      %0 = load i8* %X
      %1 = getelementptr [15 x i8]* @msg, i64 0, i8 %0
      %2 = load i8* %1
      store i8 %2, i8* %A
      ; set neg
      %3 = and i8 128, %2
      %4 = icmp eq i8 128, %3
      store i1 %4, i1* %S_neg
      ; set zero
      %5 = icmp eq i8 0, %2
      store i1 %5, i1* %S_zero

      ; BEQ loopend    ; end loop if we hit the \0
      %6 = load i1* %S_zero
      br i1 %6, label %Label_loopend, label %AutoLabel_0

AutoLabel_0:
      ; STA out
      %7 = icmp eq i16 8200, 8200
      br i1 %7, label %AutoLabel_1, label %AutoLabel_2
AutoLabel_1:
      ; stdout
      %8 = load i8* %A
      %9 = zext i8 %8 to i32
      call i32 @putchar(i32 %9)
      br label %AutoLabel_4
AutoLabel_2:
      %c.0 = icmp eq i16 8200, 8201
      br i1 %c.0, label %AutoLabel_3, label %AutoLabel_4
AutoLabel_3:
      ; exit
      %d.0 = load i8* %A
      %d.1 = zext i8 %d.0 to i32
      call void @exit(i32 %d.1) noreturn nounwind
      unreachable
AutoLabel_4:
      ; INX
      %e.0 = load i8* %X
      %e.1 = add i8 %e.0, 1
      store i8 %e.1, i8* %X
      ; set neg
      %e.2 = and i8 128, %e.1
      %e.3 = icmp eq i8 128, %e.2
      store i1 %e.3, i1* %S_neg
      ; set zero
      %e.4 = icmp eq i8 0, %e.1
      store i1 %e.4, i1* %S_zero

      ; JMP loop ; repeat
      br label %Label_loop
Label_loopend:
      ; LDA #$00 ; return code 0
      store i8 0, i8* %A
      ; set neg
      store i1 0, i1* %S_zero
      ; set zero
      store i1 1, i1* %S_neg

      ; STA exit ; exit
      %f.0 = icmp eq i16 8201, 8200
      br i1 %f.0, label %AutoLabel_5, label %AutoLabel_6
AutoLabel_5:
      ; stdout
      %g.0 = load i8* %A
      %g.1 = zext i8 %g.0 to i32
      call i32 @putchar(i32 %g.1)
      br label %AutoLabel_8
AutoLabel_6:
      %h.0 = icmp eq i16 8201, 8201
      br i1 %h.0, label %AutoLabel_7, label %AutoLabel_8
AutoLabel_7:
      ; exit
      %i.0 = load i8* %A
      %i.1 = zext i8 %i.0 to i32
      call void @exit(i32 %i.1) noreturn nounwind
      unreachable
AutoLabel_8:

      br label %IRQ_Routine

IRQ_Routine:
      unreachable

NMI_Routine:
      unreachable


      unreachable
}

